{
  "Header": {
    "_": [
      " This requires vsSolutionBuildEvent engine.",
      " Free plugin for Visual Studio or MSBuild Tools:",
      "  * https://github.com/3F/vsSolutionBuildEvent",
      "  * https://visualstudiogallery.msdn.microsoft.com/0d1dbfd7-ed8a-40af-ae39-281bfeca2334/",
      " Feedback: github.com/3F  or entry.reg@gmail.com"
    ],
    "Compatibility": "0.9"
  },
  "Components": [
    {
      "ClassName": "InternalComponent",
      "Enabled": true
    },
    {
      "ClassName": "UserVariableComponent",
      "Enabled": true
    },
    {
      "ClassName": "TryComponent",
      "Enabled": true
    },
    {
      "ClassName": "OWPComponent",
      "Enabled": true
    },
    {
      "ClassName": "NuGetComponent",
      "Enabled": true
    },
    {
      "ClassName": "FunctionComponent",
      "Enabled": true
    },
    {
      "ClassName": "FileComponent",
      "Enabled": true
    },
    {
      "ClassName": "DTEComponent",
      "Enabled": true
    },
    {
      "ClassName": "BuildComponent",
      "Enabled": true
    },
    {
      "ClassName": "BoxComponent",
      "Enabled": true
    },
    {
      "ClassName": "SevenZipComponent",
      "Enabled": true
    },
    {
      "ClassName": "ConditionComponent",
      "Enabled": true
    },
    {
      "ClassName": "MSBuildComponent",
      "Enabled": true
    },
    {
      "ClassName": "CommentComponent",
      "Enabled": true
    }
  ],
  "PreBuild": [
    {
      "Enabled": false,
      "Name": "Act",
      "Caption": "",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": false,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [
        "Debug|x64",
        "Release|x64"
      ],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeCSharp, vsSolutionBuildEvent",
        "Type": "CSharp",
        "References": [
          "System.dll"
        ],
        "SmartReferences": true,
        "GenerateInMemory": true,
        "TreatWarningsAsErrors": true,
        "WarningLevel": 4,
        "FilesMode": false,
        "CachingBytecode": false,
        "LastTime": 0,
        "Command": "using ICommand = net.r_eg.vsSBE.Actions.ICommand;\r\nusing ISolutionEvent = net.r_eg.vsSBE.Events.ISolutionEvent;\r\n\r\nnamespace vsSolutionBuildEvent\r\n{\r\n    public class CSharpMode\r\n    {\r\n        public static int Init(ICommand cmd, ISolutionEvent evt)\r\n        {\r\n            return 0;\r\n        }\r\n    }\r\n}",
        "Command__": [
          "using ICommand = net.r_eg.vsSBE.Actions.ICommand;",
          "using ISolutionEvent = net.r_eg.vsSBE.Events.ISolutionEvent;",
          "",
          "namespace vsSolutionBuildEvent",
          "{",
          "    public class CSharpMode",
          "    {",
          "        public static int Init(ICommand cmd, ISolutionEvent evt)",
          "        {",
          "            return 0;",
          "        }",
          "    }",
          "}"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "Act1",
      "Caption": "Final script from 'Automatic Version Numbering'",
      "SupportMSBuild": true,
      "SupportSBEScripts": true,
      "IgnoreIfBuildFailed": false,
      "BuildType": "Common",
      "Confirmation": false,
      "ToConfiguration": [],
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": []
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 30
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command": "#[\" \r\n    Prepare data\r\n\"]\r\n#[var input = ]\r\n#[var ver   = #[File get(\"#[var input]\")]]\r\n#[var fout  = ]\r\n\r\n#[var tpl = // This code was generated by a vsSolutionBuildEvent. \r\n// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.\r\nnamespace dotNetTips.Utility\r\n{\r\n    internal struct Version\r\n    {\r\n        public static readonly System.Version number    = new System.Version(%number%);\r\n        public const string numberString                = \"%numberString%\";\r\n        public const string numberWithRevString         = \"%numberWithRevString%\";\r\n    }\r\n}]\r\n\r\n#[\" \r\n    Calculate revision\r\n\"]\r\n#[var tBase     = $([System.DateTime]::Parse('2017/03/11').ToBinary())]\r\n#[var tNow      = $([System.DateTime]::UtcNow.Ticks)]\r\n#[var Revision  = $([System.TimeSpan]::FromTicks('$([MSBuild]::Subtract($(tNow), $(tBase)))').TotalMinutes.ToString('0'))]\r\n\r\n#[$(revMin = 100)] #[$(revMax = 100000)]\r\n#[var Revision = $([MSBuild]::Add($(revMin), $([MSBuild]::Modulo($(Revision), $([MSBuild]::Subtract($(revMax), $(revMin)))))))]\r\n\r\n#[\" \r\n    Remove placeholders\r\n\"]\r\n#[var tpl = $(tpl.Replace(\"%number%\", \"$(ver.Replace('.', ', ')), $(Revision)\"))]\r\n#[var tpl = $(tpl.Replace(\"%numberWithRevString%\", \"$(ver).$(Revision)\").Replace(\"%numberString%\", \"$(ver)\"))]\r\n\r\n\r\n#[\" \r\n    Save result\r\n\"]\r\n#[File write(\"#[var fout]\"):#[var tpl]]",
        "Command__": [
          "#[\" ",
          "    Prepare data",
          "\"]",
          "#[var input = ]",
          "#[var ver   = #[File get(\"#[var input]\")]]",
          "#[var fout  = ]",
          "",
          "#[var tpl = // This code was generated by a vsSolutionBuildEvent. ",
          "// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.",
          "namespace dotNetTips.Utility",
          "{",
          "    internal struct Version",
          "    {",
          "        public static readonly System.Version number    = new System.Version(%number%);",
          "        public const string numberString                = \"%numberString%\";",
          "        public const string numberWithRevString         = \"%numberWithRevString%\";",
          "    }",
          "}]",
          "",
          "#[\" ",
          "    Calculate revision",
          "\"]",
          "#[var tBase     = $([System.DateTime]::Parse('2017/03/11').ToBinary())]",
          "#[var tNow      = $([System.DateTime]::UtcNow.Ticks)]",
          "#[var Revision  = $([System.TimeSpan]::FromTicks('$([MSBuild]::Subtract($(tNow), $(tBase)))').TotalMinutes.ToString('0'))]",
          "",
          "#[$(revMin = 100)] #[$(revMax = 100000)]",
          "#[var Revision = $([MSBuild]::Add($(revMin), $([MSBuild]::Modulo($(Revision), $([MSBuild]::Subtract($(revMax), $(revMin)))))))]",
          "",
          "#[\" ",
          "    Remove placeholders",
          "\"]",
          "#[var tpl = $(tpl.Replace(\"%number%\", \"$(ver.Replace('.', ', ')), $(Revision)\"))]",
          "#[var tpl = $(tpl.Replace(\"%numberWithRevString%\", \"$(ver).$(Revision)\").Replace(\"%numberString%\", \"$(ver)\"))]",
          "",
          "",
          "#[\" ",
          "    Save result",
          "\"]",
          "#[File write(\"#[var fout]\"):#[var tpl]]"
        ]
      }
    }
  ],
  "PostBuild": [],
  "CancelBuild": [],
  "WarningsBuild": [],
  "ErrorsBuild": [],
  "OWPBuild": [],
  "Transmitter": [],
  "CommandEvent": [],
  "Logging": [],
  "SlnOpened": [],
  "SlnClosed": []
}